#!/usr/bin/env ruby
# frozen_string_literal: true

Process.daemon if ARGV.include? "-d"

require_relative '../config/application'
logger = Logger.new("#{__dir__}/../log/regtest.log", 'daily')

# write pid
File.open("#{__dir__}/../tmp/walletd.pid", 'w') { |f| f << Process.pid }

utxos = []
utxos.concat(Utxo.all.map(&:attributes))

key = Key.generate_from_jwk

current_block_header = Info.find_or_create_by(key: 'current_block_header')
current_block_count = current_block_header.value.to_i || 0

loop do
  logger.info ""
  logger.info "Getting block count..."
  block_count = TAPYRUS_RPC_CLIENT.getblockcount

  while current_block_count < block_count do
    current_block_count += 1
    current_block_header.update!(value: current_block_count)

    logger.info "Getting block info..."
    block_hash = TAPYRUS_RPC_CLIENT.getblockhash(current_block_count)
    block = TAPYRUS_RPC_CLIENT.getblock(block_hash)
    logger.info "  Block: #{block_hash}"

    block['tx'].each do |txid|
      logger.info "    Transaction: #{txid}"
      tx = Tapyrus::Tx.parse_from_payload(TAPYRUS_RPC_CLIENT.getrawtransaction(txid).htb)

      # input に utxos の中身が使われていれば削除
      tx.inputs.each do |input|
        utxos.delete(utxos.find { _1[:out_point] == input.out_point.to_payload.bth })
      end

      # key.pubkey が含まれる scriptPubKey を持つ UTXO を検索
      tx.outputs.each_with_index do |output, vout|
        # これだと P2SH は拾えないのでは？
        script_pubkey = output.script_pubkey
        if script_pubkey.to_s.include?(key.pubkey)
          color_id = script_pubkey.to_s.split(" ").first if script_pubkey.to_s.split(" ").second == "OP_COLOR"
          utxos << {
            txid:,
            vout:,
            token: color_id || 'TPC',
            value: output.value,
            script_pubkey: script_pubkey.to_payload.bth,
            out_point: Tapyrus::OutPoint.from_txid(txid, vout).to_payload.bth
          }
        end
      end
    end
  end

  logger.info "Current UTXOs: "
  logger.info utxos

  utxos.each do |utxo|
    Utxo.create(utxo).save
  end

  logger.info "Waiting next sync... (30 seconds after)"
  sleep 30.seconds
end
